// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NbpPlnExchangeRates.Infrastructure.ApplicationDbContexts;

#nullable disable

namespace NbpPlnExchangeRates.Infrastructure.ApplicationDbContexts.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250121133830_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NbpPlnExchangeRates.Domain.CurrencyCodes.CurrencyCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IsoCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.ToTable("CurrencyCodes");
                });

            modelBuilder.Entity("NbpPlnExchangeRates.Domain.ExchangeRates.ExchangeRate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BuyingRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CurrencyCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("date");

                    b.Property<decimal>("SellingRate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyCodeId");

                    b.ToTable("ExchangeRates");
                });

            modelBuilder.Entity("NbpPlnExchangeRates.Domain.ExchangeRates.ExchangeRate", b =>
                {
                    b.HasOne("NbpPlnExchangeRates.Domain.CurrencyCodes.CurrencyCode", "CurrencyCode")
                        .WithMany()
                        .HasForeignKey("CurrencyCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrencyCode");
                });
#pragma warning restore 612, 618
        }
    }
}
